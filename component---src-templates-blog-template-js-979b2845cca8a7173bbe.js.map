{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/templates/blogTemplate.js"],"names":["Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","textAlign","to","color","textDecoration","fontWeight","defaultProps","Layout","children","data","useStaticQuery","site","siteMetadata","title","marginTop","Date","getFullYear","href","Template","markdownRemark","frontmatter","html","className","date","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"yJAIMA,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BACEC,MAAO,CACLC,WAAW,4CACXC,aAAa,YAGf,yBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,wBAAIL,MAAO,CAAEG,OAAQ,EAAGG,UAAU,WAChC,kBAAC,OAAD,CACEC,GAAG,IACHP,MAAO,CACLQ,MAAM,QACNC,eAAe,SAGhBV,IAGL,yBAAKC,MAAO,CAAEM,UAAU,WACtB,2BAAON,MAAO,CAAEQ,MAAM,UACpB,kBAAC,OAAD,CACED,GAAG,IACHP,MAAO,CACLQ,MAAM,QACNE,WAAW,SAJf,QADF,MAWE,kBAAC,OAAD,CACEH,GAAG,SACHP,MAAO,CACLQ,MAAM,QACNE,WAAW,SAJf,cAmBVZ,EAAOa,aAAe,CACpBZ,UAAU,IAGGD,Q,UCZAc,IAtCA,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SACVC,EAAOC,yBAAe,cAU5B,OACE,oCACE,kBAAC,EAAD,CAAQhB,WAAW,UAAAe,EAAKE,KAAKC,oBAAV,eAAwBC,QAAxB,UACnB,yBACElB,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,8BAAOQ,GACP,4BAAQb,MAAO,CACbmB,UAAU,SADZ,MAGK,IAAIC,MAAOC,cAHhB,mBAKE,uBAAGC,KAAK,4BAAR,e,kCCzCV,8HAKe,SAASC,EAAT,GAEX,IACMC,EADP,EADDV,KAEQU,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KACrB,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,uBACb,yBAAKA,UAAU,aACb,4BAAKF,EAAYP,OACjB,4BAAKO,EAAYG,MACjB,yBACED,UAAU,oBACVE,wBAAyB,CAAEC,OAAQJ,QAQxC,IAAMK,EAAS","file":"component---src-templates-blog-template-js-979b2845cca8a7173bbe.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `linear-gradient(to right, purple, yellow)`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0, textAlign: `center`}}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <div style={{ textAlign: `center` }}>\n        <small style={{ color: `white` }}>\n          <Link\n            to=\"/\"\n            style={{\n              color: `white`,\n              fontWeight: `bold`,\n            }}\n          >\n            Home\n          </Link>\n          &nbsp;|&nbsp;\n          <Link\n            to=\"/about\"\n            style={{\n              color: `white`,\n              fontWeight: `bold`,\n            }}\n          >\n            About\n          </Link>\n        </small>\n      </div>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer style={{\n          marginTop: `2rem`\n        }}>\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data;\n  const { frontmatter, html } = markdownRemark;\n  return (\n    <Layout>\n      <div className=\"blog-post-container\">\n        <div className=\"blog-post\">\n          <h1>{frontmatter.title}</h1>\n          <h2>{frontmatter.date}</h2>\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n      </div>\n    </Layout>\n  )\n};\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}